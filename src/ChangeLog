2011-02-09 1.25
	-  new feature from IF-TNCCS 1.2: Added support for TNCS to send
	its IP address information to TNCC. Patch provided by Vitali Voroth.
	-  fix regarding the use of libtnc_tncs_InitializeStd()
	Even if there is a comment in test_tnccs.c saying that
	"Production code should use libtnc_tncs_Initialize",
	It should work with libtnc_tncs_InitializeStd() also. Patch provided by Vitali Voroth.

2010-01-26 1.22
	- Fixed memory leaks in libtnc_tncc_Terminate and
	libtnc_tncs_Terminate, reported by Ingo Bente.

2009-08-30 1.22
	- Fixed a typo in xsi:schemaLocation. Reported and patched by Ingo Bente.

2009-08-12 1.21
	- Improvements to building options. All libaries now build as shared LT
	libraries, resulting in .a and .so files. 
	This ensures successful building and testing on x64. Reported by
	Ingo Bente.
	- Applied a number of patches for problem identified during the
	2009 TNC plugfest. Patch supplied by Mike Steinmetz. Thanks!
	
2009-03-18 1.20
	- OSC-IMV can now handle embedded \r characters, such as in DOS
	text files even on Unix.
	- Fixed a crash in OSC-IMV connSetClientData when a connection was
	reused.
	- Fixed some memory leaks in OSC-IMV.
	
2008-05-08 1.19
	- Added OSC-IMV, a scriptable IMV that works with OSC-IMC. Policy
	is described by a configurable policy file with a rich
	syntax. Compiles and runs on Windows and Unix.
	- Improvements to OSC-IMC, supports external program, Windows
	compile and run. Changes to format of some strings, using '|'
	instead of ':' as field separator. Testing against Radiator
	OSC-IMV and OSC-IMV. Tested with XSupplicant and Radiator+TNC
	- Added extensive documentation in doc/libtnc.pdf
	- Improvements in behaviour of libtnc.
	- IMC and IMV layers now support TNC_9048_LogMessage
	- Fixed a problem with formatting of the Type field in
	libtncxml_add_imc_imv_message: the type was not properly padded to
	8 chars. Fixed to provide interoperation with FHH TNCS. Reported
	and patched by Terry Simons.
	- Tested against multiple implementations as part of XSupplicant 
	at TNC plugfest 2008.
	
2008-02-05 1.18
	- Fixed some Visual Studio compiler warnings (warning level 4)
	also upgraded the project to include headers from the latest libxml2 (
	2.6.30+ from here: ftp://xmlsoft.org/libxml2/win32/, 
	which is where gnuwin32
	points to, anyway).
	Fixes some sign mismatches in the libtnc source that
	could have potentially caused infinite loops if the IMC/IMV counters got
	extremely large.
	Also includes base64.h and mutex.h in some files that didn't have
	it. Patched by Terry Simons.
	- Removed libtnc.ncb from distribution: its rebuilt automatically.
	  Suggested by Terry Simons.
	- osc_imc now exits if the exec of RPM fails, else get multiple
	processes and confusing behaviour. Reported by Jouni Malinen    
	
2007-05-11 1.17
        - Changes to libtncimv.c and libtnctncs.c so that IMVs that have
	already provided a recommendation for a given connection do not have their
	TNC_IMV_SolicitRecommendation called again. Requested by "Shirish Rai".
	
2007-05-06 1.16
        - Added new optional functions libtnc_tncc_BindFunction and
	libtnc_tncs_BindFunction, which are optional applicaiotn level
	functions that will be called if the IMC asks to bind a function
	that TNC_TNCC_BindFunction or TNC_TNCS_BindFunction has not heard
	of. Default implementations supplied which do nothing, but can be
	overridden by the calling application if necessary. Requested by
	Chris Hessing.
	
2007-05-05 1.15
        - new TNCC and TNCS functions libtnc_tncc_InitializeStd and
	libtnc_tncs_InitializeStd so it loads the config from the
	'standard places' (/etc/tnc_config on Windows and the registry on
	Windows). Production code should use
	libtnc_tncc_InitializeStd. The previous version that specifies a
	filename is libtnc_tncc_InitializeFromFile and
	libtnc_tncs_InitializeFromFile and should only be used for testing
	where a specific config filename has to be forced.
	- renamed mutex_* functions to libtnc_mutex_* for namespace
	hygiene
	- Added dynamic array functions in new file array.c
	- Significant changes to the libtnc_tncc_* and libtnc_tncs_*
	functions to use an allocated connection context instead of connection
	IDs. Includes an application data pointer for the use of the
	caller. All TNCC and TNCS globals moved to connection context. TNCC and TNCS
	layers are now thread safe.
	
2007-05-03 1.14
        Accidentally omitted some windows mutex code. Added to mutex.c
	
2007-05-03 1.13
        INSTALL.windows added to the distribution.
	Added thread safety: Added mutexes to protect globals in libtncimc and
	libtncimv. Requires pthreads on Unix. Uses mutex objects on
	Windows.
	
2007-04-15 1.11
	Added ability to build native DLLs on Windows with Visual C++ Express
	Edition, many patches provided by Chris Hessing. See new file
	INSTALL.windows for instructions. Visual Studio files are all in
	vs2005 directory.
	
2007-02-13 1.10
	Added internal debugging messages. Enable with
	 configure --enable-libtncdebug
	Interoperation testing against TNC@FHH, see
	 http://www.inform.fh-hannover.de/de/forschung/forschungsprojekte/tnc/
	 sample TNC@FHH modules load and run OK inside libtnc.
	Altered libtncxml_add_tnccs_recommendation so that 
	TNC_IMV_ACTION_RECOMMENDATION_NO_RECOMMENDATION
	 is reported as TNCCS-Recommendation type 'none'.
	Use latest version of tncifimc.h and tncifimv.h headers from TCG
	 with their BSD style license (fixed some minor syntax errors in
	 the header files as supplied by TCG).
	Added suport for TNC_TNCS_SetAttribute and TNC_TNCS_GetAttribute,
	 plus default implementations in case the TNCS does not implement.
	Added support for Preferred Language, Reason String and Reason
	 Language in IMC, IMV and TNCCS.
	Support for Febriary 2007 specification versions: IF-IMC 1.2,
	 IF-IMV 1.2, IF-TNCCS 1.1
	
2006-08-31 1.9
	Now builds on Mac OS X
	Adjusted test suite test_dynamic.c so that multiple loads of
	the same dynamic library are avoided since OS X doesnt like that.
	Tested on:
	 Mac OS X 10.3 on PowerPC G3
	 Mac OS X 10.4.7 on PowerPC G4

2006-08-31 1.8
	Now builds under Cygwin on Windows, producing Windows DLLs.
	Improvements to -ldl linking on various platforms
	Fixed a problem with undefined libtncxml_add_tncss_error
	on Solaris.
	Tested on:
	 SuSE 10.0 intel
	 Solaris 8 SPARC
	 Windows XP intel + Cygwin
	 Solaris 10 intel
	 Free BSD 3.4 intel
	 Fedora Core 4 intel
	 Red Hat 7 intel
	
2006-05-13 1.7
        Added support for IF-TNCCS version 1.0 and matching test suite
	Now requires libxml2 as a prerequisite
	
2006-05-24 1.6
	Added process owner name to end of OSC_MESSAGE_OS_DETAILS
	Added perl bindings for libtncimc and libtncimv
	Added license and copying terms
	g
2006-04-22 1.5
	Separated libtnc.h into libtnc.h, libtncimc.h and libtncimv.h
	Added support for FILE_STATUS request type to osc_imc
	
2006-04-11 1.4 
        Cleaning up and refactoring in libtncimc
	Testing with dmalloc
	Add server side library libtncimv
	Add sample IMV sample_imv.c
	
2006-04-04 1.3 
	added vendor specific LogMessage and UserMessage
	functions to osc_imc to call in the parent
	
2006-04-03 1.2 
	Test version to Chris Hessing

